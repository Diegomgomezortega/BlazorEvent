@using System.Threading

<div class="d-flex flex-column border-primary alert alert-info">
    <div class="d-flex justify-content-between align-items-center" style="height:400px;">
        <img src="/next.png" style="transform:rotate(180deg); height:20px;width:20px;" @onclick="()=>Manualy(true)" />
        <div>
            @Render(IndexPage)
        </div>
        <img src="/next.png" style="height:20px;width:20px;" @onclick="()=>Manualy(false)" />
    </div>
    @*<div class="d-flex justify-content-center">
        @foreach (var item in Components)
        {
            if (Math.Abs(IndexPage & Components.Length) == Array.IndexOf(Components, item))
            {
                <div class="alert alert-danger border dark"></div>
            }
            else
            {
                <div class="alert alert-info border dark"></div>
            }

        }

    </div>*@

</div>
   
@code{
    [Parameter] public Type[] Components { get; set; }
    [Parameter] public int IndexPage { get; set; }



    int currentPosition;
    int indexPage;
    CancellationTokenSource cts;
    CancellationToken ct;
    protected override async Task OnInitializedAsync()
    {
        cts = new CancellationTokenSource();
        ct = cts.Token;
        indexPage = IndexPage;
        //Walkthrough();

    }


    //Metodo para mover el carrousel de manera automáctica segun el delay configurado
    public async Task Walkthrough()
    {
        while (!ct.IsCancellationRequested)
        {
            await Task.Delay(2500, ct);
            currentPosition++;
            await InvokeAsync(()=> this.StateHasChanged());

        }
    }
    public RenderFragment Render(int position)
    {
        return RenderTreeBuilder =>
        {
            RenderTreeBuilder.OpenComponent(0, Components[Math.Abs(position % Components.Length)]);
            RenderTreeBuilder.CloseComponent();
        };
    }
    public void Manualy(bool backwards)
    {
        //if (!cts.IsCancellationRequested)
        //    cts.Cancel();
        if (backwards)
        {
            IndexPage--;
            indexPage = IndexPage;

        }

        else
        {
            IndexPage++;
            indexPage = IndexPage;

        }
        
    }


}